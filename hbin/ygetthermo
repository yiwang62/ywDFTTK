#!/bin/tcsh
#
set s = "`pwd`"
set h = $s:t
unalias mv
unalias rm
unalias cp
set www = `pwd`
set hh = $www:t

set dir = */
set sqsdir = ""

unalias cp
unalias mv
unalias rm
set www = `pwd`
set e55 = "e55.dat"
set sqsdir = ""
set hT = 900
set hCp = 99

foreach option ( $* )
  if (x$1 == "x-dir") then
    if ( $#argv != 0 ) shift
    set dir = "$1"
  else if (x$1 == "x-data") then
    if ( "$#argv" != 0 ) shift
    set data = "$1"
  else if (x$1 == "x-ht") then
    if ( "$#argv" != 0 ) shift
    set ht = "$1"
  else if (x$1 == "x-hCp") then
    if ( "$#argv" != 0 ) shift
    set hCp = "$1"
  else if (x$1 == "x-sqs") then
    if ( "$#argv" != 0 ) shift
    set sqsdir = "$1"
  else if (x$1 == "x-SQS") then
    set SQS
  endif
  if ( $#argv != 0 ) shift
end

#vaspcon "$dir" >QQ0.dat
#../IN718/runcheck
#vaspchk >t0.dat

#cp x00.dat e55.dat
#set hT = 153
set iTHz = 100

set pall = `sort -k1 $e55 | awk '{print $1"#__#"$9"#__#"$8}'`
set iii = 0
set jjj = 0
set kkk = 0
set lll = 0
set ooo = 0
set ppp = 0
set qqq = 0
set sss = 0
foreach ff ( $pall )
  @ iii = "$iii" + 1
  set dd = `echo $ff | sed "s/#__#/ /g" | awk '{print $1}'` 
  if ( -e $dd/thermo/vdos_e ) then
    set nl = `wc -l <$dd/thermo/vdos_e`
    if ( "$nl" > 20 ) then
      @ sss = "$sss" + 1
    endif
  endif
  if ( ! -e $dd/used22.dat ) then
    echo "******** skipped doubtful results for $hh/$dd, used22.dat not found" >>& /dev/stderr
    @ kkk = "$kkk" + 1
    continue
  endif
  if ( ! -e $dd/good22.dat ) then
    echo "******** skipped doubtful results for $hh/$dd, good22.dat not found" >>& /dev/stderr
    @ kkk = "$kkk" + 1
    continue
  endif
  set nl = "`wc -l <$dd/good22.dat`"
  if ( "$nl" < "5" ) then
    echo "******** skipped doubtful results for $hh/$dd, good22.dat no enough data $nl" >>& /dev/stderr
    @ kkk = "$kkk" + 1
    continue
  endif
  if ( ! -e $dd/thermo/vdos_e ) then
    @ lll = "$lll" + 1
    continue
  endif
  set nl = `wc -l <$dd/thermo/vdos_e`
  if ( "$nl" < 20 ) then
    rm -r $dd/thermo/
    echo "******** skipped doubtful results for $hh/$dd/thermo, null vdos_e" >>& /dev/stderr
    @ ooo = "$ooo" + 1
    continue
  endif
  #set conv0 = `tail -n +3 $dd/thermo/vdos_e | cut -c 1-4,69-82 | awk -v Cp=10 '{if(max<$2){if (max<Cp){max=$2;line=$1;val=$2}}}END{print line,val}'
  set conv0 = `tail -n +4 $dd/thermo/vdos_e | cut -c 1-4,69-82 | awk -v hCp="$hCp" '{if(max<$2){if (max<hCp){max=$2;T=$1;Cp=$2}}}END{print T,Cp}'`
  set T = `echo $conv0 | awk '{print $1}'`
  set Cp = `echo $conv0 | awk '{print $2}'`
  if ( "$T" < "$hT" ) then
      set msg = " skipped doubtful results for $hh/$dd/thermo, heat capacity anomaly at"
      echo '********' $msg T=$T Cp=$Cp hT=$hT >>& /dev/stderr
      @ ppp = "$ppp" + 1
      continue
  endif
  set nRec = `wc -l <$dd/thermo/vdos_e`
  @ nn = "$T" / 10 + 3
  set TT = `head -$nn $dd/thermo/vdos_e | tail -1 | awk '{print $1}'`
  if ( "$nn" < "$nRec" ) then
    @ nn = "$nn" - 3
    set nsav = 0
    if ( -e  $dd/thermo/vdos_e.sav ) set nsav = `wc -l <$dd/thermo/vdos_e.sav`
    set nnew = `wc -l <$dd/thermo/vdos_e`
    if ( "$nnew" > "$nsav" ) then
      cp $dd/thermo/vdos_e $dd/thermo/vdos_e.sav
    endif
    echo head -$nn $dd/thermo/vdos_e >>& /dev/stderr
    head -$nn $dd/thermo/vdos_e >$dd/thermo/vdos_e.tmp
    mv $dd/thermo/vdos_e.tmp $dd/thermo/vdos_e
  endif
  
if ( 1 == -1 ) then
  #set conv0 = "`head -$hT $dd/thermo/vdos_e | sort -k17g | tail -1`"
  set conv0 = `tail -n +3 $dd/thermo/vdos_e | cut -c 178-191 | sort -c -u -g | & sed "s/:/ /g" | awk '{print $3}'`
  set conv00 = `tail -n +3 $dd/thermo/vdos_e | cut -c 69-82 | sort -c -u -g | & sed "s/:/ /g" | awk '{print $3}'`
  if ( "$conv0" == "" ) set conv0 = 9999
  if ( "$conv00" == "" ) set conv00 = 9999
#  set conv0 = "`head -$hT $dd/thermo/vdos_e | tail +10 | sort -k17g | tail -1`"
#  set conv00 = "`head -$hT $dd/thermo/vdos_e | tail +10 | sort -k7g | tail -1`"
#  set conv1 = "`head -$hT $dd/thermo/vdos_e | tail -1`"
  if ( "$conv0" < "$hT" ) then
    if ( "$conv00" < "$hT" ) then
      set msg = " skipped doubtful results for $hh/$dd/thermo, nonmonotonic heat capacity"
      echo '********' $msg Cp=$conv00 Bt=$conv0 hT=$hT >>& /dev/stderr
      @ ppp = "$ppp" + 1
      continue
    endif
  endif
endif
  #continue

  set energy = `echo $ff | sed "s/#__#/ /g" | awk '{print $2}'` 
  set pfile = "$dd/tplate/POSCAR"
  set file = "$www/$dd/thermo/vdos_e"
  if ( -e $file ) then
  if ( ! -z $file ) then
    set vchk = `awk 'NR==3' $dd/good22.dat | awk '{print $3}'`
    if ( ! -e  $dd/V"$vchk"/vdos.out ) then
      set vchk = `awk 'NR==4' $dd/good22.dat | awk '{print $3}'`
    endif
#    if ( ! -e $dd/phonon/V"$vchk"/OUTCAR.gz ) continue
#    set nTHz = `zcat $dd/phonon/V"$vchk"/OUTCAR.gz | grep THz | grep "f/i=" | wc -l`
    #echo "nTHz = $nTHz" : `pwd`
    if ( ! -e  $dd/V"$vchk"/vdos.out ) then
      echo "******** skipped doubtful results for $hh/$dd/V"$vchk"/vdos.out: missing vdos.out file $dd/V"$vchk"/vdos.out" >>& /dev/stderr
      @ qqq = "$qqq" + 1
      continue
    endif
    set r0 = `awk -F ' ' '$1 < 0.0 {sum += $2} END {print sum*1.e12}' $dd/V"$vchk"/vdos.out`
    #set r1 = `awk -F ' ' '$1 >= 0.0 {sum += $2} END {print sum*1.e12}' $dd/V"$vchk"/vdos.out`
    set r1 = `awk -F ' ' '{sum += $2} END {print sum*1.e12}' $dd/V"$vchk"/vdos.out`
    set nTHz = `ari -n -f %.6f $r0/$r1`
    set PQ = "PQ $nTHz"
    set eq = `echo $ff | sed "s/#__#/ /g" | awk '{print $3}'` 
    set EQ = "EQ $eq"
#    if ( "$nTHz" > "$iTHz" ) continue
      set err = `grep '\*\*\*\*' $file | wc -l | awk '{print $1}'`
      if ( "$err" != 0 ) then
        echo "******** skipped doubtful results for $hh/$dd/thermo: found FETAL ***** field" >>& /dev/stderr
        @ kkk = "$kkk" + 1
        continue
      endif
  
        set dis = ""
        set psqs = ""
        if ( $?SQS ) then
          set dis = "disordered -1.0"
          set psqs = "SQS-"
        else
          foreach sstr ( $sqsdir )
            if ( "$dd" == "$sstr" ) then
               set dis = "disordered -1.0"
               set psqs = "SQS-"
               break
            endif
          end
        endif
        set plbl = ""
        if ( "$psqs" == "SQS-" ) then
          set lbl = `echo $dd | grep "Gamma" | wc -l`
          if ( "$lbl" != 0 ) set plbl = "fcc"
          set lbl = `echo $dd | cut -c 1-3`
          if ( "$lbl" == "F32" ) set plbl = "fcc"
          set lbl = `echo $dd | cut -c 1-2`
          if ( "$lbl" == "F3" ) set plbl = "fcc"
          set lbl = `echo $dd | cut -c 1-2`
          if ( "$lbl" == "A2" ) set plbl = "bcc"
          set lbl = `echo $dd | cut -c 1-2`
          if ( "$lbl" == "A3" ) set plbl = "bcc"
          set lbl = `echo $dd | cut -c 1-3`
          if ( "$lbl" == "bcc" ) set plbl = "bcc"
          if ( "$lbl" == "fcc" ) set plbl = "fcc"
          if ( "$lbl" == "hcp" ) set plbl = "hcp"
          set lbl = `echo $dd | grep "Ni32" | wc -l`
          if ( "$lbl" != 0 ) then
            set psqs = "Sol-"
            set plbl = "fcc"
          endif
          set lbl = `echo $dd | grep "Ni108" | wc -l`
          if ( "$lbl" != 0 ) then
            set psqs = "Sol-"
            set plbl = "fcc"
          endif
          set lbl = `echo $dd | grep "Ni256" | wc -l`
          if ( "$lbl" != 0 ) then
            set psqs = "Sol-"
            set plbl = "fcc"
          endif
        else 
          set lbl = `echo $dd | grep "L12" | wc -l`
          if ( "$lbl" != 0 ) set plbl = "L12-"
          set lbl = `echo $dd | grep "D022" | wc -l`
          if ( "$lbl" != 0 ) set plbl = "D022-"
          set lbl = `echo $dd | grep "delta" | wc -l`
          if ( "$lbl" != 0 ) set plbl = "delta-"
        endif

        set atom = `head -6 $pfile | tail -1`
        set line = `head -7 $pfile | tail -1`
 
        set nc = `echo $line | wc -w`
        set com = `echo $atom $line | awk -v nc=$nc '{for (i=1; i<=nc; i++) {print $i,$(i+nc)}}' | sort -k1 |  awk '{if ($2!=1) printf "%s%s",$1,$2; else printf "%s",$1}'`

        set pname = "PN $dd"
        if ( "$plbl" != "" ) then
          set pname = "PN $plbl$psqs$com"
        endif
        echo $energy $atom $line $dd/ $file $PQ $EQ $dis $pname TT $TT
        @ jjj = "$jjj" + 1
  else
    #echo $file is zero
  endif
  else
    #echo $file not found
  endif
end
echo "$iii for $hh, $jjj normal, $sss good thermo, $kkk no eStatic, $ooo null vdos_e, $ppp wierd Cp, $qqq missing vdos.out, $lll to run" >>& /dev/stderr
