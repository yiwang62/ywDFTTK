#!/bin/tcsh
#

unalias cp
unalias mv
unalias rm
set www = `pwd`

set PHdir = phonon
foreach option ( $* )
  if (x$1 == "x-dir") then
    if ( $#argv != 0 ) shift
    set PHdir = "$1"
    continue
  else if (x$1 == "x-ISMEAR") then
    shift
    set ISMEAR = "$1"
    if ( "$#argv" != 0 ) shift
    continue
  else if (x$1 == "x-RunningCheck") then
    set RunningCheck
    if ( "$#argv" != 0 ) shift
    continue
  else if (x$1 != "x") then
    if ( $#argv != 0 ) shift
  endif
end

if ( ! -e $PHdir ) then
  mkdir $PHdir
else 
  #exit
endif
cd  $PHdir
if ( ! -e tplate ) mkdir tplate

if ( -e ../frun ) then
  set xRUN0 = `grep "foreach ee (" ../frun`
else
  set xRUN0 = `grep "foreach ee (" ../crun`
endif
set EE0 = `echo $xRUN0 | sed "s/foreach ee (//g;s/)//g"`

set s = "`pwd`"
set h = $s:t
unalias cp
unalias mv
unalias rm
set hpos = V1.000/POSCAR

foreach  ee ( $EE0 )
#foreach  ee ( 1.000 )
        set d = V$ee
        if ( ! -e $d ) mkdir $d
        set cont = "../$d/CONTCAR"
        if ( -e $cont ) then
          set nl = `wc -l <$cont`
          if ( "$nl" >= 7 ) then
            set line = `head -7 $cont | tail -1`
            set natom = `echo $line | awk '{ nn=0; for (i=1; i<=NF; i++) nn += $i; print nn;}'`
            @ nline = "$natom" + 8
            if ( "$nl" < "$nline" ) set cont = "../$d/POSCAR"
          endif
        else
          set cont = "../$d/POSCAR"
        endif
	if ( -e pMatrix ) then
	  set mat = `cat pMatrix`
          Ycell -mat $mat -short <$cont >$d/POSCAR
        else
          Ycell -SN 128 -DN 5 -short <$cont >$d/POSCAR
          #echo Ycell -SN 128 -DN 5 \<$cont \>$d/POSCAR
	endif
        if ( -e $d/POSCAR ) then
          #check error
          set line = `head -7 $d/POSCAR | tail -1`
          set natom = `echo $line | awk '{ nn=0; for (i=1; i<=NF; i++) nn += $i; print nn;}'`
          if ( "$natom" < 64 ) then
            Ycell -SN 128 -DN 5 -short <$cont >$d/POSCAR
          endif
        endif
        set hpos = $d/POSCAR
end

set EE = ""
set pwdc = `pwd`
set noomatch

set nre = 0
foreach  ee ( $EE0 )
        set d = V$ee
        #if ( -e $d/vdos.out ) continue
        #if ( -e $d/vdos.out.gz ) continue
        if ( ! -e ../$d/RelaxConvergent ) then
          if ( ! -e ../$d/StaticConvergent ) then
            @ nre = "$nre" + 1
            continue
          endif
        endif

set PRJ = ""
if ( $?WORKPRJ ) then
  set PRJ = "$WORKPRJ"
endif
set tmpdir =  $SCRATCH/`pwd | sed "s|$HOME/||g;s|$WORK/|$PRJ|g;s|/|_|g"`
        #set tmpdir =  $SCRATCH/`echo $pwdc | sed "s|/|_|g;s|_global_project_projectdirs_m891_yiwang62|prj|g"`
        set dd = "$tmpdir"_"$d"
        set error = ""
        if ( -e $dd ) then
          set nf = `ls -l $dd | wc -l`
          if ( "$nf" > 1 ) then
            set error = `echo $dd/* | awk '{ for ( i=1 ; i <=NF ; i++ ) if ( $i ~ /error/ ) print $i}'`
          endif
        endif
        if ( -e "$error" ) then
          set b = `grep "VERY BAD NEWS" $error | wc -l`
          set num = -1
          if ( -e $d/OUTCAR ) then
            set num = `cat $d/OUTCAR | grep THz | wc -l | awk '{print $1}'`
          else if ( -e $d/OUTCAR.gz ) then
            set num = `zcat $d/OUTCAR.gz | grep THz | wc -l | awk '{print $1}'`
          endif

          if ( "$num" == "0" ) set b = 1

          if ( "$b" != 0 ) then
            if ( -e $d/OUTCAR.gz ) rm $d/OUTCAR.gz
            if ( -e $d/OUTCAR ) rm $d/OUTCAR
            if ( -e $d/Bigjob ) rm $d/Bigjob
            if ( -e $d/Convergence ) rm $d/Convergence
            if ( -e $d/INCAR_$NERSC_HOST ) rm $d/INCAR_$NERSC_HOST
            Ycell -short -outpMatrix <$d/POSCAR >tmp.POSCAR
            mv tmp.POSCAR $d/POSCAR
          endif
	  set b = `grep "DUE TO TIME LIMIT" $error | wc -l`
          if ( "$b" == 0 ) then
	     set k1 = `grep "got SIGCONT" $error | wc -l`
	     set k2 = `grep "CANCELLED AT" $error | grep STEP | wc -l`
             @ b = "$k1" * "$k2"
             if ( "$b" != 0) echo "found bigjob cancelled: $pwdc/$d"
          endif
          if ( "$b" != 0 ) then
            echo "found bigjob killed: $pwdc/$d"
            echo "bigjob" >$d/Bigjob
          endif
        endif
        if ( $?RunningCheck ) then
          if ( -e "$dd" ) then
            echo "$pwdc/$d Runing"
            continue
          endif
        endif
        set outcar = "$d/OUTCAR.gz"
        set contcar = "$d/CONTCAR"
        set oszicar = "$d/OSZICAR"
        if ( -e $outcar ) then
          set nTHz = `zcat $outcar | grep THz | tail -1 | awk '{print $1}'`
          if ( "$nTHz" >= 192 ) then
            set line = `grep "E0=" -a $oszicar -n | head -1`
            if ( "$line" == "" ) continue
            set n1 = `echo $line | sed 's/:/ /g' | awk '{print $1}'`
            @ n1 = "$n1" - 1
            set line1 = `head -$n1 $oszicar | tail -1`
            set ddE = `echo $line1 | awk '{print $4}' | sed 's/^-//g' | sed 's/E-/-/g' | sed 's/-/E-/g'`
            set dE = `ari -n -f %.0f $ddE x  5.e3 | tr -d '-'`
	    set nTHz = `zcat $outcar | grep THz | grep "f/i=" | wc -l`
            if ( "$nTHz" <= 6 ) then
              if ( "$dE" < 5 ) then
                continue
              else
                echo "not convergent electronic step" >$d/Convergence
              endif
            else
              if ( "$dE" == 0 ) continue
              echo "not convergent electronic step" >$d/Convergence
            endif
            Ycell -outpMatrix -short <$d/POSCAR >tmp.POSCAR
            mv tmp.POSCAR $d/POSCAR
          endif
        endif

        if ( "$EE" == "" ) then
          set EE = "$ee"
        else
          set EE = "$EE $ee"
        endif
end

if ( "$EE" == "" ) then
  echo ": $nre AllJobDone"
  exit
endif

pwd
set xRUN = "foreach ee ( $EE )"
echo $xRUN

cp ../tplate/POTCAR.gz tplate
head -3 ../tplate/KPOINTS >tplate/KPOINTS
echo "3 3 3" >>tplate/KPOINTS
echo "0 0 0" >>tplate/KPOINTS
cp ../tplate/INCAR.PH tplate/INCAR

set jrunPH = "~/bin/hbin/jrunPH"
set ARUN = `grep "foreach ee (" $jrunPH`
sed "s/$ARUN/$xRUN/g" <$jrunPH >jrun
chmod u+x jrun
grep -v "MAGMOM="  <../tplate/INCAR.PH | grep -v ISPIN | grep -v NCORE >tplate/INCAR
if ( $?ISMEAR ) then
  grep -v "ISMEAR"  <tplate/INCAR >t.m.p.file
  mv t.m.p.file tplate/INCAR
  echo "ISMEAR= $ISMEAR" >>tplate/INCAR
endif
set line = `grep ISPIN ../tplate/INCAR | wc -l`
if ( "$line" == 1 ) then
        set svol = `vasp_volume< $hpos`
        set pvol = `vasp_volume< ../$hpos`
        set fac = `ari -n -f %.0f $svol/$pvol+0.4999`
        set mom = `grep MAGMOM ../tplate/INCAR | tail -1 | sed "s/MAGMOM//g;s/=//g;s/\*/x/g"`
        echo "ISPIN= 2" >>tplate/INCAR
        echo -n "MAGMOM="  >>tplate/INCAR
        echo "$mom" | awk -v fac=$fac '{ for (i=1; i<=NF; i++) if ($i ~ /x/) {split($i,a,"x"); printf  " %d*%d",fac*a[1],a[2]} else {printf  " %d*%d",fac,$i}}' >>tplate/INCAR
        #echo $mom | awk -v fac=$fac '{ for (i=1; i<=NF; i++) printf  " %d*%d",fac,$i}' >>tplate/INCAR
        echo >>tplate/INCAR
endif

cd ..
