#!/bin/tcsh
unalias cp
unalias rm
unalias mv
set sss = "|"
set nonomatch

#set file = "../t44.dat"
set database = "~/bin/hbin/IN718.dat"
#set phases = "*/"
set phases = `echo *.VASP | sed "s/.VASP//g"`

foreach o ( $* )
  if (x$1 == "x-database") then
    shift
    set database = "$1"
    if ( "$#argv" != 0 ) shift
    continue
  else if (x$1 == "x-phases") then
    shift
    set phases = "$1"
    if ( $#argv != 0 ) shift
    continue
  else if (x$1 == "x-debug") then
    set debug
    if ( "$#argv" != 0 ) shift
    continue
  else if (x$1 == "x-renew") then
    set renew
    if ( "$#argv" != 0 ) shift
    continue
  else
    if ( "$#argv" != 0 ) shift
  endif
end


if ( ! -e $database ) then
  echo -n >$database
endif

#echo -n >pnamefile
  #set eline = `head -$i $file | tail -1`
set www = "`pwd`"
#echo $phases | wc -w
set iii = 0
set jjj = 0
foreach ppp ( $phases )
  set poscar = $ppp".VASP"

  if ( ! -e $poscar ) continue
  if ( -e tplate/PHASENAME ) then
    if ( ! $?renew ) goto renew
  endif
  set atom = "`sed -n '6p' $poscar`"
  set natom = "`sed -n '7p' $poscar`"
  set nat = `echo $natom | awk '{ nn=0; for (i=1; i<=NF; i++) nn += $i; print nn;}'`
  set nc = `echo $natom |wc -w`
  set com = `echo $atom $natom | awk -v nc=$nc '{for (i=1; i<=nc; i++) {print $i,$(i+nc)}}' | sort -k1 |  awk '{if ($2!=1) printf "%s%s",$1,$2; else printf "%s",$1}'`

  timeout 6 pos2s $poscar -THR 1.e-4 >&/dev/null
  if ( "$status" == "124" ) then
    timeout 6 pos2s $poscar -THR 5.e-4 >&/dev/null
  endif
  if ( "$status" != "124" ) then
    set pn = `grep "Space" findsym.log | awk -v sss=$sss '{printf "%s%s%s%s%s\n",$3,sss,$4,sss,$5}'`
    set vol = `vasp_volume < $poscar`
    set avol = `ari -n -f %.1f $vol / $nat`
    set pp = $pn$sss$com
    echo $www/$ppp $pp $avol>$ppp.PHASENAME
    foreach ff ( symmetry.* Rotation.sym findsym.log )
      if ( -e $ff ) rm $ff
    end
  else
    echo "********* trouble find symmetry for $poscar"
    continue
  endif

renew:

  if ( -e $ppp.PHASENAME ) then
    if ( -e $database ) then
      set rec = `cat $ppp.PHASENAME`
      set prec = `grep "$rec" $database`
      set pp = `echo $rec | awk '{print $2}'`
      set avol = `echo $rec | awk '{print $3}'`
      grep "$pp" $database > tmp.file
      set nn = `wc -l <tmp.file`
      if ( "$prec" == "" ) then
        if ( "$nn" != 0 ) then
          set i = 0
          while ( "$i" < "$nn" )
            @ i = "$i" + 1
            set bvol = `head -$i tmp.file | tail -1 |awk '{print $3}'`
            set vdif = `ari -n -f %.0f $avol - $bvol x 100 | sed "s/-//g"`
            if ( "$vdif" < 50 ) then
              if ( $?debug ) echo "******  $rec skiped for repeat $brec"
              @ jjj = "$jjj" + 1
              echo $poscar EXCULDED
              rm $poscar $ppp.PHASENAME
              continue
            endif
          end
        endif
      else
        continue
      endif
    endif
    @ iii = "$iii" + 1
    echo $www/$ppp $pp $avol INCLUDED
    echo $www/$ppp $pp $avol >>$database
    @ lll = "$iii" + "$jjj"
    @ kkk = "$iii" / 100 * 100
    
    if ( "$kkk"  == "$iii" ) then
      echo "Handled $lll Phases, $iii into database, exclude $jjj repreated phases"
    endif
  endif
end
@ lll = "$iii" + "$jjj"
echo "Handled $lll Phases, $iii into database, exclude $jjj repreated phases"
