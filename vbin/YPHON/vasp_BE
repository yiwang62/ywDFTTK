#!/bin/csh -f
#
# A linux script to collect the data of Born effective charge and high frequency dielectric tensors from 
# the OUTCAR and CONTCAR files of VASP.5. vasp_BE collects the dielectric constant and Born effective 
# charge tensor into the dielecfij.out file which is the input to Yphon when calculating polar materials. 
#
# Usage: vasp_BE [options]
# where options can be
# -conc contcarfile, where contcarfile is the VASP.5 CONTCAR name. The default is CONTCAR
# -outc outcarfile, where outcarfile is the VASP.5 OUTTCAR name. The default is OUTCAR (canbe gzipped one)

setenv _POSIX2_VERSION 199209

unalias rm
unalias cp
unalias mv

set conc = ""
set outc = ""
foreach option ( $* )
  if (x$1 == "x-conc") then
    shift
    set conc = "$1"
    shift
    if ( ! -e $conc ) then
      echo "********CANNOT find file $conc"
      exit(1)
    endif
    continue
  else if (x$1 == "x-outc") then
    shift
    set outc = "$1"
    if ( ! -e $outc ) then
      echo "********CANNOT find file $outc"
      exit(1)
    endif
    shift
    continue
  else if ( "$#argv" != 0 ) then
    shift
  else
    break
  endif
end


foreach trycontcar ( $conc CONTCAR CONTCAR.static POSCAR )
  set contcar=$trycontcar
  if ( -e $contcar ) then
     echo "I will be using CONTCAR = $contcar"
    break
  endif
end

if ( ! -e $contcar ) then
  echo Cannot open CONTCAR.static or CONTCAR
  exit 1
endif

foreach tryoutcar ( $outc OUTCAR OUTCAR.gz )
  set outcar=$tryoutcar
  if ( -e $outcar ) then
    echo "I will be using OUTCAR = $outcar"
    break
  endif
end

if ( ! -e $outcar ) then
  echo Cannot open OUTCAR.relax.gz or OUTCAR.gz or OUTCAR
  exit 1
else
  set suffix = `echo "$outcar" | awk -F . '{print $NF}'`
  if ( "$suffix" == "gz" ) then
    zcat $outcar > t.m.p.OUTCAR
    set outcar=t.m.p.OUTCAR
  endif
endif

set line = `tail +7 $contcar | head -1`
set natom = `echo $line | awk '{ nn=0; for (i=1; i<=NF; i++) nn += $i; print nn;}'`

tail +2 $contcar | head -4 | awk 'BEGIN {getline; s=$1} {printf "%11.6lf %11.6lf %11.6lf\n",s*$1,s*$2,s*$3}' > dielecfij.out

tail +6 $contcar | head -1 | awk '{for (i=1; i<=NF; i++) print $i}' >! atoms.tmp
tail +7 $contcar | head -1 | awk '{for (i=1; i<=NF; i++) print $i}' >! rep.tmp
tail +9  $contcar | head -$natom >pos.tmp

paste atoms.tmp rep.tmp | awk '{for (i=1; i<=$2; i++) {print $1;}}' >! atoms_rep.tmp
paste pos.tmp atoms_rep.tmp >> dielecfij.out

set last = `grep ' MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects in DFT)' $outcar -n -a | tail -1 | awk '{print $1}' | sed 's/://g'`
if ( "$last" == "" ) then
  set last = `grep ' MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects)' $outcar -n -a | tail -1 | awk '{print $1}' | sed 's/://g'`
  if ( "$last" == "" ) then
    echo "OUTCAR error: CANNOT find line ' MACROSCOPIC STATIC DIELECTRIC TENSOR (including local field effects in DFT)'"
    exit(1)
  endif
endif
tail +$last $outcar | head -5 | tail +3 >> dielecfij.out

set last = `grep ' BORN EFFECTIVE CHARGES (in e, cummulative output)' $outcar -n -a | tail -1 | awk '{print $1}' | sed 's/://g'`
if ( "$last" == "" ) then
  set last = `grep ' BORN EFFECTIVE CHARGES (including local field effects)' $outcar -n -a | tail -1 | awk '{print $1}' | sed 's/://g'`
  if ( "$last" == "" ) then
    echo "OUTCAR error: CANNOT find line ' BORN EFFECTIVE CHARGES (in e, cummulative output)'"
    exit(1)
  endif
endif
#set nline = `ari -n -f %.0f $natom x 4 + 2`
set nline = `calc $natom \* 4 + 2`
#@ nline = "$natom" \* 4 + 2
tail +$last $outcar | head -$nline | tail +3 >> dielecfij.out

rm -f atoms.tmp rep.tmp atoms_rep.tmp pos.tmp
if ( -e t.m.p.OUTCAR ) rm t.m.p.OUTCAR
